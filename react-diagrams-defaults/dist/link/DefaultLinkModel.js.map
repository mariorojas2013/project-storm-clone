{"version":3,"file":"DefaultLinkModel.js","sourceRoot":"","sources":["../../src/link/DefaultLinkModel.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n\tDiagramEngine,\r\n\tLabelModel,\r\n\tLinkModel,\r\n\tLinkModelGenerics,\r\n\tLinkModelListener,\r\n\tPortModel,\r\n\tPortModelAlignment\r\n} from '@projectstorm/react-diagrams-core';\r\nimport { DefaultLabelModel } from '../label/DefaultLabelModel';\r\nimport { BezierCurve } from '@projectstorm/geometry';\r\nimport { BaseEntityEvent, BaseModelOptions, DeserializeEvent } from '@projectstorm/react-canvas-core';\r\n\r\nexport interface DefaultLinkModelListener extends LinkModelListener {\r\n\tcolorChanged?(event: BaseEntityEvent<DefaultLinkModel> & { color: null | string }): void;\r\n\r\n\twidthChanged?(event: BaseEntityEvent<DefaultLinkModel> & { width: 0 | number }): void;\r\n}\r\n\r\nexport interface DefaultLinkModelOptions extends BaseModelOptions {\r\n\twidth?: number;\r\n\tcolor?: string;\r\n\tselectedColor?: string;\r\n\tcurvyness?: number;\r\n\ttype?: string;\r\n\ttestName?: string;\r\n}\r\n\r\nexport interface DefaultLinkModelGenerics extends LinkModelGenerics {\r\n\tLISTENER: DefaultLinkModelListener;\r\n\tOPTIONS: DefaultLinkModelOptions;\r\n}\r\n\r\nexport class DefaultLinkModel extends LinkModel<DefaultLinkModelGenerics> {\r\n\tconstructor(options: DefaultLinkModelOptions = {}) {\r\n\t\tsuper({\r\n\t\t\ttype: 'default',\r\n\t\t\twidth: options.width || 3,\r\n\t\t\tcolor: options.color || 'gray',\r\n\t\t\tselectedColor: options.selectedColor || 'rgb(0,192,255)',\r\n\t\t\tcurvyness: 1,\r\n\t\t\t...options\r\n\t\t});\r\n\t}\r\n\r\n\tcalculateControlOffset(port: PortModel): [number, number] {\r\n\t\tif (port.getOptions().alignment === PortModelAlignment.RIGHT) {\r\n\t\t\treturn [this.options.curvyness, 0];\r\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.LEFT) {\r\n\t\t\treturn [-this.options.curvyness, 0];\r\n\t\t} else if (port.getOptions().alignment === PortModelAlignment.TOP) {\r\n\t\t\treturn [0, -this.options.curvyness];\r\n\t\t}\r\n\t\treturn [0, this.options.curvyness];\r\n\t}\r\n\r\n\tgetSVGPath(): string {\r\n\t\tif (this.points.length == 2) {\r\n\t\t\tconst curve = new BezierCurve();\r\n\t\t\tcurve.setSource(this.getFirstPoint().getPosition());\r\n\t\t\tcurve.setTarget(this.getLastPoint().getPosition());\r\n\t\t\tcurve.setSourceControl(this.getFirstPoint().getPosition().clone());\r\n\t\t\tcurve.setTargetControl(this.getLastPoint().getPosition().clone());\r\n\r\n\t\t\tif (this.sourcePort) {\r\n\t\t\t\tcurve.getSourceControl().translate(...this.calculateControlOffset(this.getSourcePort()));\r\n\t\t\t}\r\n\r\n\t\t\tif (this.targetPort) {\r\n\t\t\t\tcurve.getTargetControl().translate(...this.calculateControlOffset(this.getTargetPort()));\r\n\t\t\t}\r\n\t\t\treturn curve.getSVGCurve();\r\n\t\t}\r\n\t}\r\n\r\n\tserialize() {\r\n\t\treturn {\r\n\t\t\t...super.serialize(),\r\n\t\t\twidth: this.options.width,\r\n\t\t\tcolor: this.options.color,\r\n\t\t\tcurvyness: this.options.curvyness,\r\n\t\t\tselectedColor: this.options.selectedColor\r\n\t\t};\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tsuper.deserialize(event);\r\n\t\tthis.options.color = event.data.color;\r\n\t\tthis.options.width = event.data.width;\r\n\t\tthis.options.curvyness = event.data.curvyness;\r\n\t\tthis.options.selectedColor = event.data.selectedColor;\r\n\t}\r\n\r\n\taddLabel(label: LabelModel | string) {\r\n\t\tif (label instanceof LabelModel) {\r\n\t\t\treturn super.addLabel(label);\r\n\t\t}\r\n\t\tlet labelOb = new DefaultLabelModel();\r\n\t\tlabelOb.setLabel(label);\r\n\t\treturn super.addLabel(labelOb);\r\n\t}\r\n\r\n\tsetWidth(width: number) {\r\n\t\tthis.options.width = width;\r\n\t\tthis.fireEvent({ width }, 'widthChanged');\r\n\t}\r\n\r\n\tsetColor(color: string) {\r\n\t\tthis.options.color = color;\r\n\t\tthis.fireEvent({ color }, 'colorChanged');\r\n\t}\r\n}\r\n"]}