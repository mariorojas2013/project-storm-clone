{"version":3,"file":"Matrix.js","sourceRoot":"","sources":["../src/Matrix.ts"],"names":[],"mappings":"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","sourcesContent":["import { Point } from './Point';\r\n\r\nexport class Matrix {\r\n\tmatrix: number[][];\r\n\r\n\tconstructor(matrix: number[][]) {\r\n\t\tthis.matrix = matrix;\r\n\t}\r\n\r\n\tmmul(matrix: Matrix): Matrix {\r\n\t\tthis.matrix = this.matrix.map((row, i) =>\r\n\t\t\tmatrix.asArray()[0].map((_, j) => row.reduce((acc, _, n) => acc + this.matrix[i][n] * matrix.asArray()[n][j], 0))\r\n\t\t);\r\n\t\treturn this;\r\n\t}\r\n\r\n\tasArray(): number[][] {\r\n\t\treturn this.matrix;\r\n\t}\r\n\r\n\tget(rowIndex: number, columnIndex: number): number {\r\n\t\treturn this.asArray()[rowIndex][columnIndex];\r\n\t}\r\n\r\n\tpublic static multiply(...matrices: Matrix[]): Matrix {\r\n\t\tlet m: Matrix = matrices[0];\r\n\t\tfor (let i = 1; i < matrices.length; i++) {\r\n\t\t\tm = m.mmul(matrices[i]);\r\n\t\t}\r\n\t\treturn m;\r\n\t}\r\n\r\n\tpublic static scaleMatrix(x: number, y: number): Matrix {\r\n\t\treturn new Matrix([\r\n\t\t\t[x, 0, 0],\r\n\t\t\t[0, y, 0],\r\n\t\t\t[0, 0, 1]\r\n\t\t]);\r\n\t}\r\n\r\n\tpublic static translateMatrix(x: number, y: number): Matrix {\r\n\t\treturn new Matrix([\r\n\t\t\t[1, 0, x],\r\n\t\t\t[0, 1, y],\r\n\t\t\t[0, 0, 1]\r\n\t\t]);\r\n\t}\r\n\r\n\tpublic static rotateMatrix(deg: number): Matrix {\r\n\t\treturn new Matrix([\r\n\t\t\t[Math.cos(deg), -1 * Math.sin(deg), 0],\r\n\t\t\t[Math.sin(deg), Math.cos(deg), 0],\r\n\t\t\t[0, 0, 1]\r\n\t\t]);\r\n\t}\r\n\r\n\tstatic createScaleMatrix(x, y, origin: Point): Matrix {\r\n\t\treturn this.multiply(\r\n\t\t\tMatrix.translateMatrix(origin.x, origin.y),\r\n\t\t\tMatrix.scaleMatrix(x, y),\r\n\t\t\tMatrix.translateMatrix(-origin.x, -origin.y)\r\n\t\t);\r\n\t}\r\n\r\n\tstatic createRotateMatrix(deg: number, origin: Point): Matrix {\r\n\t\treturn this.multiply(\r\n\t\t\tMatrix.translateMatrix(origin.x, origin.y),\r\n\t\t\tMatrix.rotateMatrix(deg),\r\n\t\t\tMatrix.translateMatrix(-origin.x, -origin.y)\r\n\t\t);\r\n\t}\r\n}\r\n"]}