{"version":3,"file":"Polygon.js","sourceRoot":"","sources":["../src/Polygon.ts"],"names":[],"mappings":"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","sourcesContent":["import { Point } from './Point';\r\nimport _forEach from 'lodash/forEach';\r\nimport _map from 'lodash/map';\r\nimport { Matrix } from './Matrix';\r\nimport { boundingBoxFromPoints } from './toolkit';\r\nimport { Bounds, BoundsCorner } from './Bounds';\r\n\r\nexport class Polygon {\r\n\tprotected points: Point[];\r\n\r\n\tconstructor(points: Point[] = []) {\r\n\t\tthis.points = points;\r\n\t}\r\n\r\n\tserialize() {\r\n\t\treturn _map(this.points, (point) => {\r\n\t\t\treturn [point.x, point.y];\r\n\t\t});\r\n\t}\r\n\r\n\tdeserialize(data: any) {\r\n\t\tthis.points = _map(data, (point) => {\r\n\t\t\treturn new Point(point[0], point[1]);\r\n\t\t});\r\n\t}\r\n\r\n\tscale(x, y, origin: Point) {\r\n\t\tlet matrix = Matrix.createScaleMatrix(x, y, origin);\r\n\t\t_forEach(this.points, (point) => {\r\n\t\t\tpoint.transform(matrix);\r\n\t\t});\r\n\t}\r\n\r\n\ttransform(matrix: Matrix) {\r\n\t\t_forEach(this.points, (point) => {\r\n\t\t\tpoint.transform(matrix);\r\n\t\t});\r\n\t}\r\n\r\n\tsetPoints(points: Point[]) {\r\n\t\tthis.points = points;\r\n\t}\r\n\r\n\tgetPoints(): Point[] {\r\n\t\treturn this.points;\r\n\t}\r\n\r\n\trotate(degrees: number) {\r\n\t\tthis.transform(Matrix.createRotateMatrix(degrees / (180 / Math.PI), this.getOrigin()));\r\n\t}\r\n\r\n\ttranslate(offsetX: number, offsetY: number) {\r\n\t\t_forEach(this.points, (point) => {\r\n\t\t\tpoint.translate(offsetX, offsetY);\r\n\t\t});\r\n\t}\r\n\r\n\tdoClone(ob: this) {\r\n\t\tthis.points = _map(ob.points, (point) => {\r\n\t\t\treturn point.clone();\r\n\t\t});\r\n\t}\r\n\r\n\tclone(): this {\r\n\t\tlet ob = Object.create(this);\r\n\t\tob.doClone(this);\r\n\t\treturn ob;\r\n\t}\r\n\r\n\tgetOrigin(): Point {\r\n\t\tif (this.points.length === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet dimensions = boundingBoxFromPoints(this.points);\r\n\t\treturn Point.middlePoint(dimensions[BoundsCorner.TOP_LEFT], dimensions[BoundsCorner.BOTTOM_RIGHT]);\r\n\t}\r\n\r\n\tgetBoundingBox(): Bounds {\r\n\t\treturn boundingBoxFromPoints(this.points);\r\n\t}\r\n}\r\n"]}