{"version":3,"file":"BezierCurve.js","sourceRoot":"","sources":["../src/BezierCurve.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAChC,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAC;AAEpC,MAAM,CAAN,IAAY,kBAKX;AALD,WAAY,kBAAkB;IAC7B,+DAAU,CAAA;IACV,+EAAkB,CAAA;IAClB,+EAAkB,CAAA;IAClB,+DAAU,CAAA;AACX,CAAC,EALW,kBAAkB,KAAlB,kBAAkB,QAK7B;AAED,MAAM,OAAO,WAAY,SAAQ,OAAO;IACvC;QACC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,WAAW;QACV,OAAO,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,gBAAgB,EAAE,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC;IAC5I,CAAC;IAED,SAAS,CAAC,MAAe;QACxB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACzB,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;QAC5D,CAAC;QACD,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACzB,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,gBAAgB;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;IACvD,CAAC;IAED,gBAAgB;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,cAAc,CAAC,CAAC;IACvD,CAAC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,SAAS,CAAC,KAAY;QACrB,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;IAChD,CAAC;IAED,gBAAgB,CAAC,KAAY;QAC5B,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;IACxD,CAAC;IAED,gBAAgB,CAAC,KAAY;QAC5B,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;IACxD,CAAC;IAED,SAAS,CAAC,KAAY;QACrB,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;IAChD,CAAC;CACD","sourcesContent":["import { Point } from './Point';\r\nimport { Polygon } from './Polygon';\r\n\r\nexport enum BezierCurvepPoints {\r\n\tSOURCE = 0,\r\n\tSOURCE_CONTROL = 1,\r\n\tTARGET_CONTROL = 2,\r\n\tTARGET = 3\r\n}\r\n\r\nexport class BezierCurve extends Polygon {\r\n\tconstructor() {\r\n\t\tsuper([new Point(0, 0), new Point(0, 0), new Point(0, 0), new Point(0, 0)]);\r\n\t}\r\n\r\n\tgetSVGCurve(): string {\r\n\t\treturn `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\r\n\t}\r\n\r\n\tsetPoints(points: Point[]) {\r\n\t\tif (points.length !== 4) {\r\n\t\t\tthrow new Error('BezierCurve must have extactly 4 points');\r\n\t\t}\r\n\t\tsuper.setPoints(points);\r\n\t}\r\n\r\n\tgetSource(): Point {\r\n\t\treturn this.points[BezierCurvepPoints.SOURCE];\r\n\t}\r\n\r\n\tgetSourceControl(): Point {\r\n\t\treturn this.points[BezierCurvepPoints.SOURCE_CONTROL];\r\n\t}\r\n\r\n\tgetTargetControl(): Point {\r\n\t\treturn this.points[BezierCurvepPoints.TARGET_CONTROL];\r\n\t}\r\n\r\n\tgetTarget(): Point {\r\n\t\treturn this.points[BezierCurvepPoints.TARGET];\r\n\t}\r\n\r\n\tsetSource(point: Point) {\r\n\t\tthis.points[BezierCurvepPoints.SOURCE] = point;\r\n\t}\r\n\r\n\tsetSourceControl(point: Point) {\r\n\t\tthis.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\r\n\t}\r\n\r\n\tsetTargetControl(point: Point) {\r\n\t\tthis.points[BezierCurvepPoints.TARGET_CONTROL] = point;\r\n\t}\r\n\r\n\tsetTarget(point: Point) {\r\n\t\tthis.points[BezierCurvepPoints.TARGET] = point;\r\n\t}\r\n}\r\n"]}