{"version":3,"file":"StateMachine.js","sourceRoot":"","sources":["../../src/core-state/StateMachine.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAM,aAAa,CAAC;AAEhC,OAAO,EAA2B,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAM7E,MAAM,OAAO,YAAa,SAAQ,YAAkC;IAKnE,YAAY,MAAoB;QAC/B,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACtB,CAAC;IAED,eAAe;QACd,OAAO,IAAI,CAAC,YAAY,CAAC;IAC1B,CAAC;IAED,SAAS,CAAC,KAAY;QACrB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;IAED,QAAQ;QACP,IAAI,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,QAAQ,CAAC,KAAY;QACpB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAE7B,4CAA4C;QAC5C,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC;QACD,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;QAC9B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,CACb;gBACC,QAAQ,EAAE,KAAK;aACf,EACD,cAAc,CACd,CAAC;QACH,CAAC;IACF,CAAC;CACD","sourcesContent":["import { State } from './State';\r\nimport _last from 'lodash/last';\r\nimport { CanvasEngine } from '../CanvasEngine';\r\nimport { BaseEvent, BaseListener, BaseObserver } from '../core/BaseObserver';\r\n\r\nexport interface StateMachineListener extends BaseListener {\r\n\tstateChanged?: (event: BaseEvent & { newState: State }) => any;\r\n}\r\n\r\nexport class StateMachine extends BaseObserver<StateMachineListener> {\r\n\tprotected currentState: State;\r\n\tprotected stateStack: State[];\r\n\tprotected engine: CanvasEngine;\r\n\r\n\tconstructor(engine: CanvasEngine) {\r\n\t\tsuper();\r\n\t\tthis.engine = engine;\r\n\t\tthis.stateStack = [];\r\n\t}\r\n\r\n\tgetCurrentState() {\r\n\t\treturn this.currentState;\r\n\t}\r\n\r\n\tpushState(state: State) {\r\n\t\tthis.stateStack.push(state);\r\n\t\tthis.setState(state);\r\n\t}\r\n\r\n\tpopState() {\r\n\t\tthis.stateStack.pop();\r\n\t\tthis.setState(_last(this.stateStack));\r\n\t}\r\n\r\n\tsetState(state: State) {\r\n\t\tstate.setEngine(this.engine);\r\n\r\n\t\t// if no state object, get the initial state\r\n\t\tif (this.currentState) {\r\n\t\t\tthis.currentState.deactivated(state);\r\n\t\t}\r\n\t\tconst old = this.currentState;\r\n\t\tthis.currentState = state;\r\n\t\tif (this.currentState) {\r\n\t\t\tthis.currentState.activated(old);\r\n\t\t\tthis.fireEvent<'stateChanged'>(\r\n\t\t\t\t{\r\n\t\t\t\t\tnewState: state\r\n\t\t\t\t},\r\n\t\t\t\t'stateChanged'\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n"]}