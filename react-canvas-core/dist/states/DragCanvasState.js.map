{"version":3,"file":"DragCanvasState.js","sourceRoot":"","sources":["../../src/states/DragCanvasState.ts"],"names":[],"mappings":";;;;;;;;;AACA,OAAO,EAAE,yBAAyB,EAAkC,MAAM,yCAAyC,CAAC;AAUpH,MAAM,OAAO,eAAuD,SAAQ,yBAA4B;IAMvG,YAAY,UAAkC,EAAE;QAC/C,KAAK,CAAC;YACL,IAAI,EAAE,aAAa;SACnB,CAAC,CAAC;QACH,IAAI,CAAC,MAAM,mBACV,SAAS,EAAE,IAAI,IACZ,OAAO,CACV,CAAC;IACH,CAAC;IAEK,SAAS,CAAC,IAAI;;;;;YACnB,OAAM,SAAS,YAAC,IAAI,EAAE;YACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,cAAc,EAAE,CAAC;YACxC,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YAEtC,4EAA4E;YAC5E,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC;gBACtD,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC;YAED,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC;YAC1D,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,UAAU,EAAE,CAAC;QAC3D,CAAC;KAAA;IAED,WAAW,CAAC,IAAW;QACtB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC;YACtD,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;QAC1B,CAAC;IACF,CAAC;IAED,cAAc,CAAC,KAAqC;QACnD,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,MAAM;iBACT,QAAQ,EAAE;iBACV,SAAS,CAAC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;YAClG,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;QAC7B,CAAC;IACF,CAAC;CACD","sourcesContent":["import { CanvasEngine } from '../CanvasEngine';\r\nimport { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\r\nimport { State } from '../core-state/State';\r\n\r\nexport interface DragCanvasStateOptions {\r\n\t/**\r\n\t * If enabled, the canvas is available to drag\r\n\t */\r\n\tallowDrag?: boolean;\r\n}\r\n\r\nexport class DragCanvasState<E extends CanvasEngine = CanvasEngine> extends AbstractDisplacementState<E> {\r\n\t// store this as we drag the canvas\r\n\tinitialCanvasX: number;\r\n\tinitialCanvasY: number;\r\n\tconfig: DragCanvasStateOptions;\r\n\r\n\tconstructor(options: DragCanvasStateOptions = {}) {\r\n\t\tsuper({\r\n\t\t\tname: 'drag-canvas'\r\n\t\t});\r\n\t\tthis.config = {\r\n\t\t\tallowDrag: true,\r\n\t\t\t...options\r\n\t\t};\r\n\t}\r\n\r\n\tasync activated(prev) {\r\n\t\tsuper.activated(prev);\r\n\t\tthis.engine.getModel().clearSelection();\r\n\t\tawait this.engine.repaintCanvas(true);\r\n\r\n\t\t// we can block layer rendering because we are only targeting the transforms\r\n\t\tfor (let layer of this.engine.getModel().getLayers()) {\r\n\t\t\tlayer.allowRepaint(false);\r\n\t\t}\r\n\r\n\t\tthis.initialCanvasX = this.engine.getModel().getOffsetX();\r\n\t\tthis.initialCanvasY = this.engine.getModel().getOffsetY();\r\n\t}\r\n\r\n\tdeactivated(next: State) {\r\n\t\tsuper.deactivated(next);\r\n\t\tfor (let layer of this.engine.getModel().getLayers()) {\r\n\t\t\tlayer.allowRepaint(true);\r\n\t\t}\r\n\t}\r\n\r\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\r\n\t\tif (this.config.allowDrag) {\r\n\t\t\tthis.engine\r\n\t\t\t\t.getModel()\r\n\t\t\t\t.setOffset(this.initialCanvasX + event.displacementX, this.initialCanvasY + event.displacementY);\r\n\t\t\tthis.engine.repaintCanvas();\r\n\t\t}\r\n\t}\r\n}\r\n"]}