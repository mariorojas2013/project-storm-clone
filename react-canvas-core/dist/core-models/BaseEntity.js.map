{"version":3,"file":"BaseEntity.js","sourceRoot":"","sources":["../../src/core-models/BaseEntity.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AACrC,OAAO,UAAU,MAAM,kBAAkB,CAAC;AAE1C,OAAO,EAA2B,YAAY,EAAE,MAAM,sBAAsB,CAAC;AAkC7E,MAAM,OAAO,UAA8D,SAAQ,YAA2B;IAG7G,YAAY,UAAwB,EAAE;QACrC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,OAAO,mBACX,EAAE,EAAE,OAAO,CAAC,GAAG,EAAE,IACd,OAAO,CACV,CAAC;IACH,CAAC;IAED,UAAU;QACT,OAAO,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAED,KAAK;QACJ,OAAO,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC;IACxB,CAAC;IAED,OAAO,CAAC,cAAoC,EAAE,EAAE,KAAU;QACzD,QAAQ;IACT,CAAC;IAED,KAAK,CAAC,cAAoC,EAAE;QAC3C,sCAAsC;QACtC,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC;YAClC,OAAO,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACrC,CAAC;QACD,IAAI,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;QAC7B,KAAK,CAAC,OAAO,mCACT,IAAI,CAAC,OAAO,KACf,EAAE,EAAE,OAAO,CAAC,GAAG,EAAE,GACjB,CAAC;QACF,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;QAErC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QACjC,OAAO,KAAK,CAAC;IACd,CAAC;IAED,cAAc;QACb,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,WAAW,CAAC,KAA6B;QACxC,IAAI,CAAC,OAAO,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;IACvD,CAAC;IAED,SAAS;QACR,OAAO;YACN,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE;YACnB,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;YAC3B,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,aAAa;SACzC,CAAC;IACH,CAAC;IAED,SAAS,CAA8C,KAAQ,EAAE,CAAsB;QACtF,KAAK,CAAC,SAAS,iBAEb,MAAM,EAAE,IAAI,IACT,KAAK,GAET,CAAC,CACD,CAAC;IACH,CAAC;IAEM,QAAQ;QACd,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;IAC5B,CAAC;IAEM,SAAS,CAAC,SAAkB,IAAI;QACtC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;QAC7B,IAAI,CAAC,SAAS,CACb;YACC,MAAM,EAAE,MAAM;SACd,EACD,aAAa,CACb,CAAC;IACH,CAAC;CACD","sourcesContent":["import { Toolkit } from '../Toolkit';\r\nimport _cloneDeep from 'lodash/cloneDeep';\r\nimport { CanvasEngine } from '../CanvasEngine';\r\nimport { BaseEvent, BaseListener, BaseObserver } from '../core/BaseObserver';\r\nimport { BaseModel } from './BaseModel';\r\n\r\nexport interface BaseEntityEvent<T extends BaseEntity = BaseEntity> extends BaseEvent {\r\n\tentity: T;\r\n}\r\n\r\nexport interface BaseEntityListener<T extends BaseEntity = BaseEntity> extends BaseListener {\r\n\tlockChanged?(event: BaseEntityEvent<T> & { locked: boolean }): void;\r\n}\r\n\r\n/**\r\n * @TODO move to enums\r\n */\r\nexport type BaseEntityType = 'node' | 'link' | 'port' | 'point';\r\n\r\nexport interface BaseEntityOptions {\r\n\tid?: string;\r\n\tlocked?: boolean;\r\n\tnodeWorktable?: boolean;\r\n}\r\n\r\nexport type BaseEntityGenerics = {\r\n\tLISTENER: BaseEntityListener;\r\n\tOPTIONS: BaseEntityOptions;\r\n};\r\n\r\nexport interface DeserializeEvent<T extends BaseEntity = BaseEntity> {\r\n\tengine: CanvasEngine;\r\n\tdata: ReturnType<T['serialize']>;\r\n\tregisterModel(model: BaseModel);\r\n\tgetModel<T extends BaseModel>(id: string): Promise<T>;\r\n}\r\n\r\nexport class BaseEntity<T extends BaseEntityGenerics = BaseEntityGenerics> extends BaseObserver<T['LISTENER']> {\r\n\tprotected options: T['OPTIONS'];\r\n\r\n\tconstructor(options: T['OPTIONS'] = {}) {\r\n\t\tsuper();\r\n\t\tthis.options = {\r\n\t\t\tid: Toolkit.UID(),\r\n\t\t\t...options\r\n\t\t};\r\n\t}\r\n\r\n\tgetOptions() {\r\n\t\treturn this.options;\r\n\t}\r\n\r\n\tgetID() {\r\n\t\treturn this.options.id;\r\n\t}\r\n\r\n\tdoClone(lookupTable: { [s: string]: any } = {}, clone: any) {\r\n\t\t/*noop*/\r\n\t}\r\n\r\n\tclone(lookupTable: { [s: string]: any } = {}) {\r\n\t\t// try and use an existing clone first\r\n\t\tif (lookupTable[this.options.id]) {\r\n\t\t\treturn lookupTable[this.options.id];\r\n\t\t}\r\n\t\tlet clone = _cloneDeep(this);\r\n\t\tclone.options = {\r\n\t\t\t...this.options,\r\n\t\t\tid: Toolkit.UID()\r\n\t\t};\r\n\t\tclone.clearListeners();\r\n\t\tlookupTable[this.options.id] = clone;\r\n\r\n\t\tthis.doClone(lookupTable, clone);\r\n\t\treturn clone;\r\n\t}\r\n\r\n\tclearListeners() {\r\n\t\tthis.listeners = {};\r\n\t}\r\n\r\n\tdeserialize(event: DeserializeEvent<this>) {\r\n\t\tthis.options.id = event.data.id;\r\n\t\tthis.options.locked = event.data.locked;\r\n\t\tthis.options.nodeWorktable = event.data.nodeWorktable;\r\n\t}\r\n\r\n\tserialize() {\r\n\t\treturn {\r\n\t\t\tid: this.options.id,\r\n\t\t\tlocked: this.options.locked,\r\n\t\t\tnodeWorktable: this.options.nodeWorktable\r\n\t\t};\r\n\t}\r\n\r\n\tfireEvent<L extends Partial<BaseEntityEvent> & object>(event: L, k: keyof T['LISTENER']) {\r\n\t\tsuper.fireEvent(\r\n\t\t\t{\r\n\t\t\t\tentity: this,\r\n\t\t\t\t...event\r\n\t\t\t},\r\n\t\t\tk\r\n\t\t);\r\n\t}\r\n\r\n\tpublic isLocked(): boolean {\r\n\t\treturn this.options.locked;\r\n\t}\r\n\r\n\tpublic setLocked(locked: boolean = true) {\r\n\t\tthis.options.locked = locked;\r\n\t\tthis.fireEvent(\r\n\t\t\t{\r\n\t\t\t\tlocked: locked\r\n\t\t\t},\r\n\t\t\t'lockChanged'\r\n\t\t);\r\n\t}\r\n}\r\n"]}