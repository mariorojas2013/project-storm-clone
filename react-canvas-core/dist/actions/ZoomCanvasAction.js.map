{"version":3,"file":"ZoomCanvasAction.js","sourceRoot":"","sources":["../../src/actions/ZoomCanvasAction.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAe,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAMxE,MAAM,OAAO,gBAAiB,SAAQ,MAAM;IAC3C,YAAY,UAAmC,EAAE;QAChD,KAAK,CAAC;YACL,IAAI,EAAE,SAAS,CAAC,WAAW;YAC3B,IAAI,EAAE,CAAC,WAAoC,EAAE,EAAE;gBAC9C,MAAM,EAAE,KAAK,EAAE,GAAG,WAAW,CAAC;gBAC9B,4EAA4E;gBAC5E,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC;oBACtD,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;gBAC3B,CAAC;gBAED,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACrC,KAAK,CAAC,eAAe,EAAE,CAAC;gBACxB,MAAM,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,GAAG,GAAG,CAAC;gBAClE,IAAI,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;gBACrE,8BAA8B;gBAC9B,IAAI,KAAK,CAAC,OAAO,IAAI,WAAW,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC;oBAC5C;;;;sBAIE;oBACF,WAAW,IAAI,CAAC,CAAC;gBAClB,CAAC;qBAAM,CAAC;oBACP,WAAW,IAAI,EAAE,CAAC;gBACnB,CAAC;gBACD,IAAI,KAAK,CAAC,YAAY,EAAE,GAAG,WAAW,GAAG,EAAE,EAAE,CAAC;oBAC7C,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,YAAY,EAAE,GAAG,WAAW,CAAC,CAAC;gBACxD,CAAC;gBAED,MAAM,UAAU,GAAG,KAAK,CAAC,YAAY,EAAE,GAAG,GAAG,CAAC;gBAE9C,MAAM,YAAY,GAAG,KAAK,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBACjE,MAAM,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC;gBACvC,MAAM,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC;gBACzC,0DAA0D;gBAC1D,MAAM,SAAS,GAAG,WAAW,GAAG,UAAU,GAAG,WAAW,GAAG,aAAa,CAAC;gBACzE,MAAM,UAAU,GAAG,YAAY,GAAG,UAAU,GAAG,YAAY,GAAG,aAAa,CAAC;gBAC5E,0CAA0C;gBAC1C,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC;gBAClD,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC;gBAEjD,4CAA4C;gBAC5C,MAAM,OAAO,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC,GAAG,aAAa,GAAG,WAAW,CAAC;gBAC7E,MAAM,OAAO,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC,GAAG,aAAa,GAAG,YAAY,CAAC;gBAE9E,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,SAAS,GAAG,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,GAAG,UAAU,GAAG,OAAO,CAAC,CAAC;gBACrG,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;gBAE5B,sBAAsB;gBACtB,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,SAAS,EAAE,EAAE,CAAC;oBACtD,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBAC1B,CAAC;YACF,CAAC;SACD,CAAC,CAAC;IACJ,CAAC;CACD","sourcesContent":["import { WheelEvent } from 'react';\r\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\r\n\r\nexport interface ZoomCanvasActionOptions {\r\n\tinverseZoom?: boolean;\r\n}\r\n\r\nexport class ZoomCanvasAction extends Action {\r\n\tconstructor(options: ZoomCanvasActionOptions = {}) {\r\n\t\tsuper({\r\n\t\t\ttype: InputType.MOUSE_WHEEL,\r\n\t\t\tfire: (actionEvent: ActionEvent<WheelEvent>) => {\r\n\t\t\t\tconst { event } = actionEvent;\r\n\t\t\t\t// we can block layer rendering because we are only targeting the transforms\r\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\r\n\t\t\t\t\tlayer.allowRepaint(false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst model = this.engine.getModel();\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tconst oldZoomFactor = this.engine.getModel().getZoomLevel() / 100;\r\n\t\t\t\tlet scrollDelta = options.inverseZoom ? -event.deltaY : event.deltaY;\r\n\t\t\t\t//check if it is pinch gesture\r\n\t\t\t\tif (event.ctrlKey && scrollDelta % 1 !== 0) {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t\tChrome and Firefox sends wheel event with deltaY that\r\n\t\t\t\t\t\thave fractional part, also `ctrlKey` prop of the event is true\r\n\t\t\t\t\t\tthough ctrl isn't pressed\r\n\t\t\t\t\t*/\r\n\t\t\t\t\tscrollDelta /= 3;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tscrollDelta /= 60;\r\n\t\t\t\t}\r\n\t\t\t\tif (model.getZoomLevel() + scrollDelta > 10) {\r\n\t\t\t\t\tmodel.setZoomLevel(model.getZoomLevel() + scrollDelta);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst zoomFactor = model.getZoomLevel() / 100;\r\n\r\n\t\t\t\tconst boundingRect = event.currentTarget.getBoundingClientRect();\r\n\t\t\t\tconst clientWidth = boundingRect.width;\r\n\t\t\t\tconst clientHeight = boundingRect.height;\r\n\t\t\t\t// compute difference between rect before and after scroll\r\n\t\t\t\tconst widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\r\n\t\t\t\tconst heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\r\n\t\t\t\t// compute mouse coords relative to canvas\r\n\t\t\t\tconst clientX = event.clientX - boundingRect.left;\r\n\t\t\t\tconst clientY = event.clientY - boundingRect.top;\r\n\r\n\t\t\t\t// compute width and height increment factor\r\n\t\t\t\tconst xFactor = (clientX - model.getOffsetX()) / oldZoomFactor / clientWidth;\r\n\t\t\t\tconst yFactor = (clientY - model.getOffsetY()) / oldZoomFactor / clientHeight;\r\n\r\n\t\t\t\tmodel.setOffset(model.getOffsetX() - widthDiff * xFactor, model.getOffsetY() - heightDiff * yFactor);\r\n\t\t\t\tthis.engine.repaintCanvas();\r\n\r\n\t\t\t\t// re-enable rendering\r\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\r\n\t\t\t\t\tlayer.allowRepaint(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n"]}