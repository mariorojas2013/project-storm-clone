{"version":3,"file":"DiagramEngine.js","sourceRoot":"","sources":["../src/DiagramEngine.ts"],"names":[],"mappings":"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","sourcesContent":["import { NodeModel } from './entities/node/NodeModel';\r\nimport { PortModel } from './entities/port/PortModel';\r\nimport { LinkModel } from './entities/link/LinkModel';\r\nimport { LabelModel } from './entities/label/LabelModel';\r\nimport { boundingBoxFromPolygons, Point, Rectangle } from '@projectstorm/geometry';\r\nimport { MouseEvent } from 'react';\r\nimport {\r\n\tAbstractModelFactory,\r\n\tAbstractReactFactory,\r\n\tBaseModel,\r\n\tCanvasEngine,\r\n\tCanvasEngineListener,\r\n\tCanvasEngineOptions,\r\n\tFactoryBank,\r\n\tToolkit\r\n} from '@projectstorm/react-canvas-core';\r\nimport { DiagramModel } from './models/DiagramModel';\r\n\r\n/**\r\n * Passed as a parameter to the DiagramWidget\r\n */\r\nexport class DiagramEngine extends CanvasEngine<CanvasEngineListener, DiagramModel> {\r\n\tprotected nodeFactories: FactoryBank<AbstractReactFactory<NodeModel, DiagramEngine>>;\r\n\tprotected linkFactories: FactoryBank<AbstractReactFactory<LinkModel, DiagramEngine>>;\r\n\tprotected portFactories: FactoryBank<AbstractModelFactory<PortModel, DiagramEngine>>;\r\n\tprotected labelFactories: FactoryBank<AbstractReactFactory<LabelModel, DiagramEngine>>;\r\n\r\n\tmaxNumberPointsPerLink: number;\r\n\r\n\tconstructor(options: CanvasEngineOptions = {}) {\r\n\t\tsuper(options);\r\n\t\tthis.maxNumberPointsPerLink = 1000;\r\n\r\n\t\t// create banks for the different factory types\r\n\t\tthis.nodeFactories = new FactoryBank();\r\n\t\tthis.linkFactories = new FactoryBank();\r\n\t\tthis.portFactories = new FactoryBank();\r\n\t\tthis.labelFactories = new FactoryBank();\r\n\r\n\t\tconst setup = (factory: FactoryBank) => {\r\n\t\t\tfactory.registerListener({\r\n\t\t\t\tfactoryAdded: (event) => {\r\n\t\t\t\t\tevent.factory.setDiagramEngine(this);\r\n\t\t\t\t},\r\n\t\t\t\tfactoryRemoved: (event) => {\r\n\t\t\t\t\tevent.factory.setDiagramEngine(null);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tsetup(this.nodeFactories);\r\n\t\tsetup(this.linkFactories);\r\n\t\tsetup(this.portFactories);\r\n\t\tsetup(this.labelFactories);\r\n\t}\r\n\r\n\t/**\r\n\t * Gets a model and element under the mouse cursor\r\n\t */\r\n\tgetMouseElement(event: MouseEvent): BaseModel {\r\n\t\tvar target = event.target as Element;\r\n\t\tvar diagramModel = this.model;\r\n\r\n\t\t//is it a port\r\n\t\tvar element = Toolkit.closest(target, '.port[data-name]');\r\n\t\tif (element) {\r\n\t\t\tvar nodeElement = Toolkit.closest(target, '.node[data-nodeid]') as HTMLElement;\r\n\t\t\treturn diagramModel.getNode(nodeElement.getAttribute('data-nodeid')).getPort(element.getAttribute('data-name'));\r\n\t\t}\r\n\r\n\t\t//look for a point\r\n\t\telement = Toolkit.closest(target, '.point[data-id]');\r\n\t\tif (element) {\r\n\t\t\treturn diagramModel.getLink(element.getAttribute('data-linkid')).getPointModel(element.getAttribute('data-id'));\r\n\t\t}\r\n\r\n\t\t//look for a link\r\n\t\telement = Toolkit.closest(target, '[data-linkid]');\r\n\t\tif (element) {\r\n\t\t\treturn diagramModel.getLink(element.getAttribute('data-linkid'));\r\n\t\t}\r\n\r\n\t\t//look for a node\r\n\t\telement = Toolkit.closest(target, '.node[data-nodeid]');\r\n\t\tif (element) {\r\n\t\t\treturn diagramModel.getNode(element.getAttribute('data-nodeid'));\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\t//!-------------- FACTORIES ------------\r\n\r\n\tgetNodeFactories() {\r\n\t\treturn this.nodeFactories;\r\n\t}\r\n\r\n\tgetLinkFactories() {\r\n\t\treturn this.linkFactories;\r\n\t}\r\n\r\n\tgetLabelFactories() {\r\n\t\treturn this.labelFactories;\r\n\t}\r\n\r\n\tgetPortFactories() {\r\n\t\treturn this.portFactories;\r\n\t}\r\n\r\n\tgetFactoryForNode<F extends AbstractReactFactory<NodeModel, DiagramEngine>>(node: NodeModel | string) {\r\n\t\tif (typeof node === 'string') {\r\n\t\t\treturn this.nodeFactories.getFactory(node);\r\n\t\t}\r\n\t\treturn this.nodeFactories.getFactory(node.getType());\r\n\t}\r\n\r\n\tgetFactoryForLink<F extends AbstractReactFactory<LinkModel, DiagramEngine>>(link: LinkModel | string) {\r\n\t\tif (typeof link === 'string') {\r\n\t\t\treturn this.linkFactories.getFactory<F>(link);\r\n\t\t}\r\n\t\treturn this.linkFactories.getFactory<F>(link.getType());\r\n\t}\r\n\r\n\tgetFactoryForLabel<F extends AbstractReactFactory<LabelModel, DiagramEngine>>(label: LabelModel) {\r\n\t\tif (typeof label === 'string') {\r\n\t\t\treturn this.labelFactories.getFactory(label);\r\n\t\t}\r\n\t\treturn this.labelFactories.getFactory(label.getType());\r\n\t}\r\n\r\n\tgetFactoryForPort<F extends AbstractModelFactory<PortModel, DiagramEngine>>(port: PortModel) {\r\n\t\tif (typeof port === 'string') {\r\n\t\t\treturn this.portFactories.getFactory<F>(port);\r\n\t\t}\r\n\t\treturn this.portFactories.getFactory<F>(port.getType());\r\n\t}\r\n\r\n\tgenerateWidgetForLink(link: LinkModel): JSX.Element {\r\n\t\treturn this.getFactoryForLink(link).generateReactWidget({ model: link });\r\n\t}\r\n\r\n\tgenerateWidgetForNode(node: NodeModel): JSX.Element {\r\n\t\treturn this.getFactoryForNode(node).generateReactWidget({ model: node });\r\n\t}\r\n\r\n\tgetNodeElement(node: NodeModel): Element {\r\n\t\tconst selector = this.canvas.querySelector(`.node[data-nodeid=\"${node.getID()}\"]`);\r\n\t\tif (selector === null) {\r\n\t\t\tthrow new Error('Cannot find Node element with nodeID: [' + node.getID() + ']');\r\n\t\t}\r\n\t\treturn selector;\r\n\t}\r\n\r\n\tgetNodePortElement(port: PortModel): any {\r\n\t\tvar selector = this.canvas.querySelector(\r\n\t\t\t`.port[data-name=\"${port.getName()}\"][data-nodeid=\"${port.getParent().getID()}\"]`\r\n\t\t);\r\n\t\tif (selector === null) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'Cannot find Node Port element with nodeID: [' +\r\n\t\t\t\t\tport.getParent().getID() +\r\n\t\t\t\t\t'] and name: [' +\r\n\t\t\t\t\tport.getName() +\r\n\t\t\t\t\t']'\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn selector;\r\n\t}\r\n\r\n\tgetPortCenter(port: PortModel): Point {\r\n\t\treturn this.getPortCoords(port).getOrigin();\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate rectangular coordinates of the port passed in.\r\n\t */\r\n\tgetPortCoords(port: PortModel, element?: HTMLDivElement): Rectangle {\r\n\t\tif (!this.canvas) {\r\n\t\t\tthrow new Error('Canvas needs to be set first');\r\n\t\t}\r\n\t\tif (!element) {\r\n\t\t\telement = this.getNodePortElement(port);\r\n\t\t}\r\n\t\tconst sourceRect = element.getBoundingClientRect();\r\n\t\tconst point = this.getRelativeMousePoint({\r\n\t\t\tclientX: sourceRect.left,\r\n\t\t\tclientY: sourceRect.top\r\n\t\t});\r\n\t\tconst zoom = this.model.getZoomLevel() / 100.0;\r\n\t\treturn Rectangle.fromPointAndSize(point, sourceRect.width / zoom, sourceRect.height / zoom);\r\n\t}\r\n\r\n\t/**\r\n\t * Determine the width and height of the node passed in.\r\n\t * It currently assumes nodes have a rectangular shape, can be overriden for customised shapes.\r\n\t */\r\n\tgetNodeDimensions(node: NodeModel): { width: number; height: number } {\r\n\t\tif (!this.canvas) {\r\n\t\t\treturn {\r\n\t\t\t\twidth: 0,\r\n\t\t\t\theight: 0\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst nodeElement = this.getNodeElement(node);\r\n\t\tconst nodeRect = nodeElement.getBoundingClientRect();\r\n\r\n\t\treturn {\r\n\t\t\twidth: nodeRect.width,\r\n\t\t\theight: nodeRect.height\r\n\t\t};\r\n\t}\r\n\r\n\tgetBoundingNodesRect(nodes: NodeModel[]): Rectangle {\r\n\t\tif (nodes) {\r\n\t\t\tif (nodes.length === 0) {\r\n\t\t\t\treturn new Rectangle();\r\n\t\t\t}\r\n\t\t\treturn new Rectangle(boundingBoxFromPolygons(nodes.map((node) => node.getBoundingBox())));\r\n\t\t}\r\n\t}\r\n\r\n\tzoomToFitSelectedNodes(options: { margin?: number; maxZoom?: number }) {\r\n\t\tconst nodes: NodeModel[] = this.model\r\n\t\t\t.getSelectedEntities()\r\n\t\t\t.filter((entity) => entity instanceof NodeModel) as NodeModel[];\r\n\t\tthis.zoomToFitNodes({\r\n\t\t\tmargin: options.margin,\r\n\t\t\tmaxZoom: options.maxZoom,\r\n\t\t\tnodes: nodes.length > 0 ? nodes : null\r\n\t\t});\r\n\t}\r\n\r\n\tzoomToFitNodes(options: { margin?: number; nodes?: NodeModel[]; maxZoom?: number });\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\tzoomToFitNodes(margin: number);\r\n\tzoomToFitNodes(options) {\r\n\t\tlet margin = options || 0;\r\n\t\tlet nodes: NodeModel[] = [];\r\n\t\tlet maxZoom: number | null = null;\r\n\t\tif (!!options && typeof options == 'object') {\r\n\t\t\tmargin = options.margin || 0;\r\n\t\t\tnodes = options.nodes || [];\r\n\t\t\tmaxZoom = options.maxZoom || null;\r\n\t\t}\r\n\r\n\t\t// no node selected\r\n\t\tif (nodes.length === 0) {\r\n\t\t\tnodes = this.model.getNodes();\r\n\t\t}\r\n\t\tconst nodesRect = this.getBoundingNodesRect(nodes);\r\n\t\tif (nodesRect) {\r\n\t\t\t// there is something we should zoom on\r\n\t\t\tlet canvasRect = this.canvas.getBoundingClientRect();\r\n\r\n\t\t\tconst calculate = (margin: number = 0) => {\r\n\t\t\t\t// work out zoom\r\n\t\t\t\tconst xFactor = this.canvas.clientWidth / (nodesRect.getWidth() + margin * 2);\r\n\t\t\t\tconst yFactor = this.canvas.clientHeight / (nodesRect.getHeight() + margin * 2);\r\n\r\n\t\t\t\tlet zoomFactor = xFactor < yFactor ? xFactor : yFactor;\r\n\t\t\t\tif (maxZoom && zoomFactor > maxZoom) {\r\n\t\t\t\t\tzoomFactor = maxZoom;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\tzoom: zoomFactor,\r\n\t\t\t\t\tx:\r\n\t\t\t\t\t\tcanvasRect.width / 2 -\r\n\t\t\t\t\t\t((nodesRect.getWidth() + margin * 2) / 2 + nodesRect.getTopLeft().x) * zoomFactor +\r\n\t\t\t\t\t\tmargin,\r\n\t\t\t\t\ty:\r\n\t\t\t\t\t\tcanvasRect.height / 2 -\r\n\t\t\t\t\t\t((nodesRect.getHeight() + margin * 2) / 2 + nodesRect.getTopLeft().y) * zoomFactor +\r\n\t\t\t\t\t\tmargin\r\n\t\t\t\t};\r\n\t\t\t};\r\n\r\n\t\t\tlet params = calculate(0);\r\n\t\t\tif (margin) {\r\n\t\t\t\tif (params.x < margin || params.y < margin) {\r\n\t\t\t\t\tparams = calculate(margin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// apply\r\n\t\t\tthis.model.setZoomLevel(params.zoom * 100);\r\n\t\t\tthis.model.setOffset(params.x, params.y);\r\n\t\t\tthis.repaintCanvas();\r\n\t\t}\r\n\t}\r\n\r\n\tgetMaxNumberPointsPerLink(): number {\r\n\t\treturn this.maxNumberPointsPerLink;\r\n\t}\r\n\r\n\tsetMaxNumberPointsPerLink(max: number) {\r\n\t\tthis.maxNumberPointsPerLink = max;\r\n\t}\r\n}\r\n"]}