{"version":3,"file":"index.umd.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACVA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AAOA;AAMA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sources":["webpack://projectstorm/react-diagrams/webpack/universalModuleDefinition","webpack://projectstorm/react-diagrams/external commonjs \"@projectstorm/react-canvas-core\"","webpack://projectstorm/react-diagrams/external commonjs \"@projectstorm/react-diagrams-core\"","webpack://projectstorm/react-diagrams/external commonjs \"@projectstorm/react-diagrams-defaults\"","webpack://projectstorm/react-diagrams/external commonjs \"@projectstorm/react-diagrams-routing\"","webpack://projectstorm/react-diagrams/webpack/bootstrap","webpack://projectstorm/react-diagrams/webpack/runtime/compat get default export","webpack://projectstorm/react-diagrams/webpack/runtime/define property getters","webpack://projectstorm/react-diagrams/webpack/runtime/hasOwnProperty shorthand","webpack://projectstorm/react-diagrams/webpack/runtime/make namespace object","webpack://projectstorm/react-diagrams/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"projectstorm/react-diagrams\"] = factory();\n\telse\n\t\troot[\"projectstorm/react-diagrams\"] = factory();\n})(self, () => {\nreturn ","module.exports = require(\"@projectstorm/react-canvas-core\");","module.exports = require(\"@projectstorm/react-diagrams-core\");","module.exports = require(\"@projectstorm/react-diagrams-defaults\");","module.exports = require(\"@projectstorm/react-diagrams-routing\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {\r\n\tDefaultDiagramState,\r\n\tDiagramEngine,\r\n\tLinkLayerFactory,\r\n\tNodeLayerFactory,\r\n\tNodeWLayerFactory\r\n} from '@projectstorm/react-diagrams-core';\r\nimport {\r\n\tDefaultLabelFactory,\r\n\tDefaultLinkFactory,\r\n\tDefaultNodeFactory,\r\n\tDefaultPortFactory\r\n} from '@projectstorm/react-diagrams-defaults';\r\nimport { PathFindingLinkFactory } from '@projectstorm/react-diagrams-routing';\r\nimport { SelectionBoxLayerFactory, CanvasEngineOptions } from '@projectstorm/react-canvas-core';\r\n\r\nexport * from '@projectstorm/react-canvas-core';\r\nexport * from '@projectstorm/react-diagrams-core';\r\nexport * from '@projectstorm/react-diagrams-defaults';\r\nexport * from '@projectstorm/react-diagrams-routing';\r\n\r\n/**\r\n * Construct an engine with the defaults installed\r\n */\r\nexport default (options: CanvasEngineOptions = {}): DiagramEngine => {\r\n\tconst engine = new DiagramEngine(options);\r\n\r\n\t// register model factories\r\n\tengine.getLayerFactories().registerFactory(new NodeLayerFactory());\r\n\tengine.getLayerFactories().registerFactory(new NodeWLayerFactory());\r\n\tengine.getLayerFactories().registerFactory(new LinkLayerFactory());\r\n\tengine.getLayerFactories().registerFactory(new SelectionBoxLayerFactory());\r\n\r\n\tengine.getLabelFactories().registerFactory(new DefaultLabelFactory());\r\n\tengine.getNodeFactories().registerFactory(new DefaultNodeFactory()); // i cant figure out why\r\n\tengine.getLinkFactories().registerFactory(new DefaultLinkFactory());\r\n\tengine.getLinkFactories().registerFactory(new PathFindingLinkFactory());\r\n\tengine.getPortFactories().registerFactory(new DefaultPortFactory());\r\n\r\n\t// register the default interaction behaviours\r\n\tengine.getStateMachine().pushState(new DefaultDiagramState());\r\n\treturn engine;\r\n};\r\n"],"names":[],"sourceRoot":""}