{"version":3,"file":"PathFindingLinkWidget.js","sourceRoot":"","sources":["../../src/link/PathFindingLinkWidget.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport _first from 'lodash/first';\r\nimport _last from 'lodash/last';\r\nimport { DiagramEngine } from '@projectstorm/react-diagrams-core';\r\nimport { PathFinding } from '../engine/PathFinding';\r\nimport { PathFindingLinkFactory } from './PathFindingLinkFactory';\r\nimport { PathFindingLinkModel } from './PathFindingLinkModel';\r\nimport { DefaultLinkSegmentWidget } from '@projectstorm/react-diagrams-defaults';\r\n\r\nexport interface PathFindingLinkWidgetProps {\r\n\tcolor?: string;\r\n\twidth?: number;\r\n\tsmooth?: boolean;\r\n\tlink: PathFindingLinkModel;\r\n\tdiagramEngine: DiagramEngine;\r\n\tfactory: PathFindingLinkFactory;\r\n}\r\n\r\nexport interface PathFindingLinkWidgetState {\r\n\tselected: boolean;\r\n}\r\n\r\nexport class PathFindingLinkWidget extends React.Component<PathFindingLinkWidgetProps, PathFindingLinkWidgetState> {\r\n\trefPaths: React.RefObject<SVGPathElement>[];\r\n\tpathFinding: PathFinding;\r\n\r\n\tconstructor(props: PathFindingLinkWidgetProps) {\r\n\t\tsuper(props);\r\n\t\tthis.refPaths = [];\r\n\t\tthis.state = {\r\n\t\t\tselected: false\r\n\t\t};\r\n\t\tthis.pathFinding = new PathFinding(this.props.factory);\r\n\t}\r\n\r\n\tcomponentDidUpdate(): void {\r\n\t\tthis.props.link.setRenderedPaths(\r\n\t\t\tthis.refPaths.map((ref) => {\r\n\t\t\t\treturn ref.current;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentDidMount(): void {\r\n\t\tthis.props.link.setRenderedPaths(\r\n\t\t\tthis.refPaths.map((ref) => {\r\n\t\t\t\treturn ref.current;\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentWillUnmount(): void {\r\n\t\tthis.props.link.setRenderedPaths([]);\r\n\t}\r\n\r\n\tgenerateLink(path: string, id: string | number): JSX.Element {\r\n\t\tconst ref = React.createRef<SVGPathElement>();\r\n\t\tthis.refPaths.push(ref);\r\n\t\treturn (\r\n\t\t\t<DefaultLinkSegmentWidget\r\n\t\t\t\tkey={`link-${id}`}\r\n\t\t\t\tpath={path}\r\n\t\t\t\tselected={this.state.selected}\r\n\t\t\t\tdiagramEngine={this.props.diagramEngine}\r\n\t\t\t\tfactory={this.props.diagramEngine.getFactoryForLink(this.props.link)}\r\n\t\t\t\tlink={this.props.link}\r\n\t\t\t\tforwardRef={ref}\r\n\t\t\t\tonSelection={(selected) => {\r\n\t\t\t\t\tthis.setState({ selected: selected });\r\n\t\t\t\t}}\r\n\t\t\t\textras={{}}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tthis.refPaths = [];\r\n\t\t//ensure id is present for all points on the path\r\n\t\tvar points = this.props.link.getPoints();\r\n\t\tvar paths = [];\r\n\r\n\t\t// first step: calculate a direct path between the points being linked\r\n\t\tconst directPathCoords = this.pathFinding.calculateDirectPath(_first(points), _last(points));\r\n\r\n\t\tconst routingMatrix = this.props.factory.getRoutingMatrix();\r\n\t\t// now we need to extract, from the routing matrix, the very first walkable points\r\n\t\t// so they can be used as origin and destination of the link to be created\r\n\t\tconst smartLink = this.pathFinding.calculateLinkStartEndCoords(routingMatrix, directPathCoords);\r\n\t\tif (smartLink) {\r\n\t\t\tconst { start, end, pathToStart, pathToEnd } = smartLink;\r\n\r\n\t\t\t// second step: calculate a path avoiding hitting other elements\r\n\t\t\tconst simplifiedPath = this.pathFinding.calculateDynamicPath(routingMatrix, start, end, pathToStart, pathToEnd);\r\n\r\n\t\t\tpaths.push(\r\n\t\t\t\t//smooth: boolean, extraProps: any, id: string | number, firstPoint: PointModel, lastPoint: PointModel\r\n\t\t\t\tthis.generateLink(this.props.factory.generateDynamicPath(simplifiedPath), '0')\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn <>{paths}</>;\r\n\t}\r\n}\r\n"]}